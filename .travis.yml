arch: amd64
os: linux
dist: focal

notifications:
  email: false
  # slack:
  #   secure: ilztqDylzgDwnh+AAHdrmHjgD4rjutJa5rh783H8HfW7KKY+RtHaAa+Z9V6uAbU3/fPk29fkCXRxT/scAI4Fn0TQ/Hi0alCs7ytNJg+2fbVcI5xWHbmJznOb0pQl0Gn6MGwouSyP9WvRtivtT5u+wlNR6yKycTmUI9qP3Fe7nA/k/WdRt5SHGjjprtYZYbBOg+9UStzubMuQj5hTBeDs78UyUbejSsZ0Cp9+OkTcugoEegwn0o9QdkvFGHF/hQ5bVGGNVAFUVOg+B4DFiw59MbsgIDZ663CXCTxUJ1I4uS3rI7LpnY2G8c5dKp9E2KDkM8sPKWzg4qeyj1POMPNDUbNYWIHBBK4NxrQ+PqW1nquxNTVsqYi2IXVmV2BWx9+SUS06YwDsjrCcQyAtnCzxn/tL3aX/8jyeN3yPwytJgDuj9IF8nIJZuuMgDOs1ZVa9fbL8ANBMcZMKIPCSwjO8670ULl5xKAWKGTY7HwzGLU3syQBwOX+eukf9zx2Y9qrsP1kJJT8YTOD45icJRAMPQQEiN20wxKh/V7Kz0ewc6LG8Bv1FyM6f+7ehNZvkwrStzJJ85JwDkPeTKKiBa3kuBQzE0CBm3/cTYCXgQEo3jggH1xPF8OkbYhuX8TrZjp3PBVCABto6V6OGILFA7Hhv6gK9eHxCSVOICPfWCfYXakY=

language: cpp

# Don't shallow clone as this may break the versioning
git:
  depth: false

branches:
  only:
  - master
  - development
  - /^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$/

# BUILD MATRIX
jobs:
  fast_finish: true
  include:
  - stage: test
    os: windows
    before_install:
        - choco install python3 --version 3.7.4 --params "/InstallDir:C:\\Python"
        - export PATH="/c/Python:/c/Python/Scripts:$PATH"
        - python -m pip install --upgrade pip

  - stage: test 
    os: osx
    osx_image: xcode12.2
    before_install:
      - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      - chmod +x miniconda.sh
      - ./miniconda.sh -b
      - export PATH=/Users/travis/miniconda3/bin:$PATH
      - conda update --yes conda
      - conda create --yes -n env_name python=3.7.4 pip numpy
      - source activate env_name

  - stage: test
    os: linux
    dist: focal
    compiler: gcc

  #################
  # DEPLOYMENT
  #################
  # windows blender2.79
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: windows
    before_install:
        - choco install python3 --version 3.5.4 --params "/InstallDir:C:\\Python"
        - export PATH="/c/Python:/c/Python/Scripts:$PATH"
        - python -m pip install --upgrade pip
        # - python -m pip install numpy
    install: skip
    script:
      - mkdir -p build && cd build;
      - cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DGAMER_TESTS=on -DBUILD_PYGAMER=on -DBUILD_BLENDGAMER=ON -DBLENDER_VERSION_OVERRIDE=2.79 -G "Visual Studio 15 2017 Win64" ..
      - cmake --build . --config Release
    deploy:
      provider: releases
      token: $GITHUB_TOKEN
      draft: true
      file_glob: true
      file: "*.zip"
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        repo: ctlee/gamer

  # windows blender2.83
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: windows
    before_install:
        - choco install python3 --version 3.7.4 --params "/InstallDir:C:\\Python"
        - export PATH="/c/Python:/c/Python/Scripts:$PATH"
        - python -m pip install --upgrade pip
        # - python -m pip install numpy
    install: skip
    script:
      - mkdir -p build && cd build;
      - cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DGAMER_TESTS=on -DBUILD_PYGAMER=on -DBUILD_BLENDGAMER=ON -DBLENDER_VERSION_OVERRIDE=2.83  -G "Visual Studio 15 2017 Win64" ..
      - cmake --build . --config Release
    deploy:
      provider: releases
      token: $GITHUB_TOKEN
      draft: true
      file_glob: true
      file: "*.zip"
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        repo: ctlee/gamer

  # linux blender2.79
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: linux
    dist: focal
    compiler: gcc
    before_install: 
      - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      - chmod +x miniconda.sh
      - ./miniconda.sh -b
      - export PATH=/home/travis/miniconda3/bin:$PATH
      - conda update --yes conda
      - conda create --yes -n env_name python=3.5.4 pip numpy
      - source activate env_name
      # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
      # - sudo rm -rf /dev/shm
      # - sudo ln -s /run/shm /dev/shm
    install: skip
    script:
      - mkdir -p build && cd build;
      - cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON  -DBUILD_PYGAMER=on -DBUILD_BLENDGAMER=ON -DBLENDER_VERSION_OVERRIDE=2.79 ..
      - cmake --build . --config Release -j 2
    deploy:
      provider: releases
      token: $GITHUB_TOKEN
      draft: true
      file_glob: true
      file: "*.zip"
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        repo: ctlee/gamer

  # linux blender2.83
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: linux
    dist: focal
    compiler: gcc
    before_install: 
      - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
      - chmod +x miniconda.sh
      - ./miniconda.sh -b
      - export PATH=/home/travis/miniconda3/bin:$PATH
      - conda update --yes conda
      - conda create --yes -n env_name python=3.7.4 pip numpy
      - source activate env_name
      # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
      # - sudo rm -rf /dev/shm
      # - sudo ln -s /run/shm /dev/shm
    install: skip
    script:
      - mkdir -p build && cd build;
      - cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DBUILD_PYGAMER=on -DBUILD_BLENDGAMER=ON -DBLENDER_VERSION_OVERRIDE=2.83 ..
      - cmake --build . --config Release -j 2
    deploy:
      provider: releases
      token: $GITHUB_TOKEN
      draft: true
      file_glob: true
      file: "*.zip"
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        repo: ctlee/gamer

  # osx blender2.79
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: osx
    osx_image: xcode12.2
    before_install:
      - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      - chmod +x miniconda.sh
      - ./miniconda.sh -b
      - export PATH=/Users/travis/miniconda3/bin:$PATH
      - conda update --yes conda
      - conda create --yes -n env_name python=3.5.4 pip numpy
      - source activate env_name
    install: skip
    script:
      - mkdir -p build && cd build;
      - cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DBUILD_PYGAMER=on -DBUILD_BLENDGAMER=ON -DCMAKE_OSX_DEPLOYMENT_TARGET=10.12 -DBLENDER_VERSION_OVERRIDE=2.79 ..
      - cmake --build . --config Release -j 2
    deploy:
      provider: releases
      token: $GITHUB_TOKEN
      draft: true
      file_glob: true
      file: "*.zip"
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        repo: ctlee/gamer

  # osx blender2.83
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: osx
    osx_image: xcode12.2
    before_install:
      - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
      - chmod +x miniconda.sh
      - ./miniconda.sh -b
      - export PATH=/Users/travis/miniconda3/bin:$PATH
      - conda update --yes conda
      - conda create --yes -n env_name python=3.7.4 pip numpy
      - source activate env_name
    install: skip
    script:
      - mkdir -p build && cd build;
      - cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DBUILD_PYGAMER=on -DBUILD_BLENDGAMER=ON -DCMAKE_OSX_DEPLOYMENT_TARGET=10.12 -DBLENDER_VERSION_OVERRIDE=2.83 ..
      - cmake --build . --config Release -j 2
    deploy:
      provider: releases
      token: $GITHUB_TOKEN
      draft: true
      file_glob: true
      file: "*.zip"
      skip_cleanup: true
      overwrite: true
      on:
        tags: true
        repo: ctlee/gamer

  # Deploy PyPi
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: linux
    dist: focal
    compiler: gcc
    cache: pip
    before_install: skip
    install: skip
    script:
      - python -m pip install scikit-build pytest
      - python setup.py sdist;
    deploy:
      provider: pypi
      username: "__token__"
      password:
        secure: "QDT685JvVcZygQZY7DPc9Yqncn8haVwXddLBYC4jcLgz18pOiJHKXGnF2w+A5UgjjRnF8phNyHmxDd3zYt4/QfZLCGLbxkLEagcUa0ZWaBudOf8kQ7alQI2IPJl4vrU9xpH9U9sUtVMhcPyvfMtvxRnKVrPSX4Sl5JXKFLQJ+hdbu7qVXmpV7zBqBPkC4+bQP1T8RJcm6kKTfd7uE1KAYdb6xD+K5dxXVW4jbOQxsLSqUINLbcTWheq//xB6NmKei49rvaV9/q7MgCvbfFGWRlHwaRn3a6v8GhANfcPKTCCKKDU9BEvn96scGkrCzVaHNqzCXLEPx0qcaZIxEPhDzKk8VQYNYnXp4REpOpJ71EAkaZDSxUKUeYGo1XmNimf9PoLZqUoZ429DJG0eJs3vkKWN4G+X7MZh7eGst1nN8eK0l0QPO5znNPe3nbvTW7V3E5JvrdiGD8sQzEEW7810Elaybznhi2hGHeB/ow7QceUC05a23ZsKlw2i/YeSGkdKvNo7YFqX4pMHuB7KnkFEU5SS1Fu8NIrVfkK9GDcEYpCsDvyz6+RnN6vXiKcUsb7vHnYIQLJll5fYpkl09H7jccf74oNsP4s6rj2FhNl0XLnE8VBRYq5ufEF4hNcPqfdOuv18KljjARba2JI3UzfYscciJR8lcyOKhcQMfPBbaK0="
      skip_cleanup: true
      skip_existing: true
      distributions: "sdist"
      on:
        tags: true
        repo: ctlee/gamer


before_install:
  - uname -a
  - $CXX --version
  - cmake --version

install:
  - mkdir -p build && cd build;
  - |
      if [ "$TRAVIS_OS_NAME" = "windows" ]; then
        cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DGAMER_TESTS=on -DBUILD_PYGAMER=on -G "Visual Studio 15 2017 Win64" ..
      else
        cmake -DCMAKE_BUILD_TYPE=RELEASE -DGETEIGEN=ON -DGETPYBIND11=ON -DGAMER_TESTS=on -DBUILD_PYGAMER=on ..
      fi
  - cmake --build . --config Release -j 2

script:
  - ctest -C Release -V -j
